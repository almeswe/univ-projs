<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACk
        EAAAAk1TRnQBSQFMAgEBAwEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAZEBkAGPAf8CjwGNAf8BjgGNAYwB/wGNAYwBiwH/AYsBigGJAf8BigGJ
        AYgB/wKIAYYB/wGHAYYBhQH/AYYBhQGDAf8ChAGCAf8BgwGCAYAB/wGCAYEBewH/EAABRAHHAesB/wFE
        AcYB6gH/AUQBxgHqAf8BQwHFAeoB/wFDAcQB6QH/AUMBxAHpAf8BQgHDAegB/wFCAcIB6AH/AUIBwgHn
        Af8BQgHBAecB/wFBAcEB5gH/AUIBwQHnAf8BTAGaAa8B7xAAAbMBoQGRAf8BswGhAZEB/wGzAaEBkQH/
        AbMBoQGRAf8BswGhAZEB/wGzAaEBkQH/ZAACkgGQAf8C+wH6Af8C+wH6Af8C+wH6Af8C+wH6Af8C+wH6
        Af8C+wH6Af8C+wH6Af8C+wH6Af8C+wH6Af8C+wH6Af8BgwGCAYAB/xAAAUUByAHrAf8BjwHnAv8BjgHm
        Av8BjAHmAv8BiwHmAv8BiQHlAv8BiAHlAv8BhgHkAv8BhQHkAv8BgwHkAv8BQgHBAecB/wGDAeQC/wFC
        AcEB5wH/GAAB1wHQAcYB/wHXAdABxgH/bAACkwGSAf8B/AL7Af8B+AH3AfYB/wH4AfcB9gH/AfcC9gH/
        AfcB9gH1Af8B9wH2AfUB/wH3AfYB9QH/AfcB9gH1Af8B9wH2AfUB/wL7AfoB/wKEAYIB/xAAAUUByAHs
        Af8BkQHnAv8BjwHnAv8BjgHmAv8BjAHmAv8BiwHmAv8BiQHlAv8BiAHlAv8BhgHkAv8BhQHkAv8BQgHC
        AecB/wGFAeQC/wFCAcIB5wH/BAABnwF2AToB/wGfAXYBOAH/AZ8BdQE3Af8BnwF1ATYB/wGfAXQBNAH/
        AZ8BdAEzAf8BnwFzATIB/wGfAXMBMAH/AZ8BcgEvAf8BnwFyAS4B/wGfAXIBLQH/AZ8BcQErAf9YAAGV
        AZQBkwH/AfwC+wH/AfgB9wH2Af8B+AH3AfYB/wH4AfcB9gH/AfgB9wH2Af8C9wH2Af8B9wH2AfUB/wH3
        AfYB9QH/AfcB9gH1Af8C+wH6Af8BhgGFAYMB/xAAAUUByQHsAf8BkgHnAv8BkQHnAv8BjwHnAv8BjgHm
        Av8BjAHmAv8BiwHmAv8BiQHlAv8BiAHlAv8BhgHkAv8BQgHCAegB/wGGAeQC/wFCAcIB6AH/BAABnwF3
        ATwC/wHGAWUC/wHFAWMC/wHEAV8C/wG7AUgC/wG2AToC/wG1ATcC/wG0ATQC/wGzATIC/wGyAS8C/wGx
        ASwB/wGfAXIBLQH/WAAClgGVAf8C/AH7Af8B+AL3Af8B+AL3Af8B+AH3AfYB/wH4AfcB9gH/AfgB9wH2
        Af8B+AH3AfYB/wH3AfYB9QH/AfcB9gH1Af8C+wH6Af8BhwGGAYUB/xAAAUUByQHtAf8BlAHoAv8BkgHn
        Av8BkQHnAv8BjwHnAv8BjgHmAv8BjAHmAv8BiwHmAv8BiQHlAv8BiAHlAv8BQgHDAegB/wGIAeUC/wFC
        AcMB6AH/BAABnwF3AT0C/wHJAW4C/wHJAW0C/wHHAWkC/wHFAWQC/wG8AUsC/wG3ATwC/wG2ATkC/wG1
        ATYC/wG0ATQC/wGzATEB/wGfAXMBMAH/WAAClwGWAf8C/AH7Af8B+QH4AfcB/wH5AfgB9wH/AfkB+AH3
        Af8C+AH3Af8B+AH3AfYB/wH4AfcB9gH/AfgB9wH2Af8B9wL2Af8C+wH6Af8CiAGGAf8QAAFGAcoB7QH/
        AZYB6AL/AZQB6AL/AZIB5wL/AZEB5wL/AY8B5wL/AY4B5gL/AYwB5gL/AYsB5gL/AYkB5QL/AUMBxAHp
        Af8BgQHhAfwB/wFDAcQB6QH/BAABnwF3AT0C/wHMAXUC/wHMAXUC/wHLAXIC/wHIAWwC/wHGAWUC/wG8
        AUwC/wG3AT4C/wG2ATsC/wG1ATgC/wG0ATYB/wGfAXQBMgH/AWkBWQE8Ae8DQAFwUAABmQKYAf8D/AH/
        AfkC+AH/AfkB+AH3Af8B+QH4AfcB/wH5AfgB9wH/AvgB9wH/AfgC9wH/AfgB9wH2Af8B+AH3AfYB/wP7
        Af8BigGJAYgB/xAAAUYBywHuAf8BlwHoAv8BlgHoAv8BlAHoAv8BkgHnAv8BkQHnAv8BjwHnAv8BjgHm
        Av8BjAHmAv8BiwHmAv8BVAHMAe8B/wFLAcgB7AH/AVcBZAFnAb8EAAGfAXcBPQL/Ac4BegL/Ac4BewL/
        AcwBdwL/AcoBcQL/AcgBawL/AcUBYwL/AbwBTAL/AbgBQAL/AbcBPQL/AbYBOgH/AZ8BdAE0Af8BhAFl
        ASwB/wFxAVgBJQH/AlEBTgGfTAACmgGZAf8B/QL8Af8C+QH4Af8C+QH4Af8B+QL4Af8B+QH4AfcB/wH5
        AfgB9wH/AfkB+AH3Af8B+AL3Af8B+AH3AfYB/wH8AvsB/wGLAYoBiQH/EAABRgHLAe4B/wGZAekC/wGX
        AegC/wGWAegC/wGUAegC/wGSAecC/wGRAecC/wGPAecC/wGOAeYC/wGMAeYC/wGHAeQB/gH/AUMBxAHp
        Af8DDAEQBAABnwF3AT0C/wHPAYIC/wHPAYMC/wHNAXkC/wHLAXMC/wHJAW0C/wHGAWYC/wHDAV8C/wG8
        AUwC/wG5AUIC/wG4AT8B/wGfAXUBNgH/AZIBcQEyAf8BgwFkASsB/wFsAVUBIwH/AyoBQEgAA5sB/wH9
        AvwB/wH6AfkB+AH/AfoB+QH4Af8B+gH5AfgB/wL5AfgB/wH5AvgB/wH5AfgB9wH/AvgB9wH/AfgB9wH2
        Af8B/AL7Af8BjQGMAYsB/xAAAUcBzAHvAf8BmgHpAv8BmQHpAv8BlwHoAv8BlgHoAv8BlAHoAv8BkgHn
        Av8BkQHnAv8BjwHnAv8BjgHmAv8BjAHmAv8BQwHFAeoB/wgAAZ8BdwE9Av8BzgF6Av8BzgF7Av8BzAF3
        Av8BygFxAv8ByAFsAv8BxgFmAv8BxAFgAv8BwQFZAv8BvAFLAv8BuQFEAf8BnwF2ATkB/wGeAXoBNwH/
        AY4BbQEwAf8BdwFeASgB/wFWAVQBUgGvSAACnQGcAf8B/QL8Af8B+gL5Af8B+gH5AfgB/wH6AfkB+AH/
        AfoB+QH4Af8C+QH4Af8B+QH4AfcB/wH5AfgB9wH/AvgB9wH/AfwC+wH/AY4BjQGMAf8QAAFHAc0B7wH/
        AZwB6gL/AZoB6QL/AZkB6QL/AZcB6AL/AZYB6AL/AZQB6AL/AZIB5wL/AZEB5wL/AY8B5wL/AY4B5gL/
        AUQBxgHqAf8IAAGfAXcBPQH/AZ8BdwE9Af8BnwF3AT0B/wGfAXcBPQH/AZ8BdwE9Af8BnwF3AT0B/wGf
        AXcBPQH/AZ8BdwE9Af8BnwF3AT0B/wGfAXcBPQH/AZ8BdwE8Af8BnwF3ATsB/wGnAYUBOwH/AZYBdAE0
        Af8BlwGAAUkB/wFxAVoBKgH/SAADngH/Av0B/AH/AvoB+QH/AfoC+QH/AfoB+QH4Af8B+gH5AfgB/wH6
        AfkB+AH/AfkC+AH/AfkB+AH3Af8B+QH4AfcB/wH8AvsB/wKPAY0B/xAAAUcBzQHvAf8BnQHqAv8BnAHq
        Av8BmgHpAv8BmQHpAv8BlwHoAv8BlgHoAv8BlAHoAv8BkgHnAv8BkQHnAv8BjwHnAv8BRAHGAeoB/xgA
        AyoBQAHRAakBVAH/AeUBzwGZAf8B5wHNAZIB/wHYAa8BWQH/AdABpQFNAf8BxgGeAUkB/wG7AZUBRAH/
        AawBiQE+Af8BrgGTAVUB/wHwAesBzgH/AdcBzQGmAf9IAAGgAp8B/wP9Af8C+gH5Af8C+gH5Af8B+gL5
        Af8B+gH5AfgB/wH6AfkB+AH/AvkB+AH/AfkC+AH/AfkB+AH3Af8B/AL7Af8BkQGQAY8B/xAAAUgBzgHw
        Af8BnwHqAv8BnQHqAv8BnAHqAv8BmgHpAv8BmQHpAv8BlwHoAv8BlgHoAv8BlAHoAv8BkgHnAv8BkQHn
        Av8BRAHHAesB/xgAAyEBMAHeAckBlAH/AegB0QGcAf8B4wHBAXQB/wHZAa0BUQH/AdMBqAFPAf8BygGh
        AUsB/wG+AZcBRQH/Aa8BiwE/Af8BzQG6AYwB/wHwAeoBzQH/AYsBhwF5Ad9IAAOhAf8D/QH/AfsC+gH/
        AvoB+QH/AvoB+QH/AfoC+QH/AfoB+QH4Af8C+QH4Af8DpgH/A4wB/wOMAf8CkgGQAf8QAAFIAc8B8AH/
        AaAB6wL/AZ8B6gL/AZ0B6gL/AZwB6gL/AZoB6QL/AZkB6QL/AZcB6AL/AZYB6AL/AZQB6AL/AZIB5wL/
        AUUByAHrAf8cAAGLAYcBdQHfAeUBzgGYAf8B8QHiAbkB/wHbAbEBWgH/AdIBqAFPAf8ByQGgAUsB/wG9
        AZcBRQH/Aa8BiwE/Af8BzAG4AYkB/wHrAeUBxgH/A1MBn0gAA6IB/wP9Af8C+wH6Af8B+wL6Af8C+gH5
        Af8B+gL5Af8B+gH5AfgB/wH6AfkB+AH/A6YB/wPqAf8D1QH/A4IB7xAAAUgBzwHxAf8BogHrAv8BoAHr
        Av8BnwHqAv8BnQHqAv8BnAHqAv8BmgHpAv8BmQHpAv8BlwHoAv8BlgHoAv8BlAHoAv8BRQHIAewB/xwA
        AzIBUAHnAeABvgH/AfMB7QHSAf8B9wHvAdMB/wHtAd0BswH/AdIBswFtAf8BugGUAUQB/wGwAY8BRwH/
        AesB5AHFAf8BnwGXAX8B7wMXASBIAAKkAaMB/wP9Af8D/QH/A/0B/wL9AfwB/wH9AvwB/wH9AvwB/wH9
        AvwB/wOmAf8D1gH/A4MB7wMhATAQAAFIAdAB8QH/AaMB6wL/AaIB6wL/AaAB6wL/AZ8B6gL/AZ0B6gL/
        AZwB6gL/AZoB6QL/AZkB6QL/AZcB6AL/AZYB6AL/AUUByQHsAf8gAAM6AWAB5wHgAb8B/wHuAeYBxgH/
        AfEB6gHMAf8BywGtAWkB/wG3AZQBSQH/AeEB1QGvAf8BrwGrAZcB7wMhATBMAAOlAf8CpAGjAf8DogH/
        A6EB/wGgAp8B/wOeAf8CnQGcAf8DmwH/ApoBmQH/A4UB7wMhATAUAAFJAdEB8gH/AUgB0AHxAf8BSAHP
        AfEB/wFIAc8B8AH/AUgBzgHwAf8BRwHNAe8B/wFHAc0B7wH/AUcBzAHvAf8BRgHLAe4B/wFGAcsB7gH/
        AUYBygHtAf8BWAFyAXoBzyQAAyoBQANTAZ8BjQGHAXkB3wHJAbIBdgH/AXIBbgFiAc8DTQGPAwwBEEgA
        AUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHAAQMBwAEBAeABfwIAAcABAwHA
        AQEB+QH/AgABwAEDAcABAQEAAQ8CAAHAAQMBwAEBAQABDwIAAcABAwHAAQEBAAEPAgABwAEDAcABAQEA
        AQMCAAHAAQMBwAEBAQABAQIAAcABAwHAAQEEAAHAAQMBwAEDBAABwAEDAcABAwQAAcABAwHAAQMB8AMA
        AcABAwHAAQMB8AMAAcABAwHAAQMB+AMAAcABAwHAAQMB+AMAAcABAwHAAQMB/AEBAgABwAEHAcABAwH+
        AQMCAAs=
</value>
  </data>
</root>